  name: test build deploy

  on:
    push:
      branches:
        - main

    pull_request:
      branches:
        - main

  jobs:
    #test:
    #  runs-on: ubuntu-latest
    #  steps:
    #    - name: checkout
    #      uses: actions/checkout@v4
    #    - name: set-up go
    #      uses: actions/setup-go@v5
    #      with:
    #        go-version-file: go.mod
    #        check-latest: true
    #    - name: docker compose
    #      run: |
    #        docker compose up -d
    #      env:
    #        DOCKER_COMPOSE_COMMAND_OPTS: "-inMemory"
    #    - name: test
    #      run: |
    #        ./scripts/dynamodb/create-table.sh
    #        go test -v ./...
    #      env:
    #        AWS_ACCESS_KEY_ID: test
    #        AWS_SECRET_ACCESS_KEY: test
    #        AWS_DEFAULT_REGION: 'us-west-2'
    #        DYNAMODB_LOCAL_ENDPOINT: "http://localhost:8000"

    #build:
    #  needs: [test]
    #  runs-on: ubuntu-latest
    #  steps:
    #    - name: checkout
    #      uses: actions/checkout@v4
    #    - name: Docker meta
    #      id: meta
    #      uses: docker/metadata-action@v5
    #      with:
    #        images: ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}
    #        tags: |
    #          type=sha,prefix=,format=long
    #          type=ref,event=branch
    #          type=ref,event=pr
    #    - name: Set up QEMU
    #      uses: docker/setup-qemu-action@v3
    #    - name: Set up Docker Buildx
    #      uses: docker/setup-buildx-action@v3
    #    - name: Login to Github Container Registry
    #      uses: docker/login-action@v3
    #      with:
    #        registry: ghcr.io
    #        username: ${{ github.actor }}
    #        password: ${{ secrets.GITHUB_TOKEN }}
    #    - name: Build and push
    #      uses: docker/build-push-action@v5
    #      with:
    #        push: ${{ github.event_name != 'pull_request' }}
    #        tags: ${{ steps.meta.outputs.tags }}
    #        labels: ${{ steps.meta.outputs.labels }}

    deploy:
      #needs: [build]
      runs-on: ubuntu-latest
      steps:
        - name: checkout
          uses: actions/checkout@v4
        - name: cat file 1
          run: cat deploy/deployment.yaml
        - name: Update values.yaml
          uses: fjogeleit/yaml-update-action@v0.14.0
          with:
            valueFile: 'deploy/deployment.yaml'
            propertyPath: 'metadata.name' #'spec.template.spec.containers[0].image'
            value: ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:${{ github.sha }}
            commitChange: ${{ github.event_name != 'pull_request' }}
            targetBranch: testing-deploy #main
            createPR: ${{ github.event_name != 'pull_request' }}
            branch: 'update-image-version'
            token: ${{ secrets.GITHUB_TOKEN }}
            message: 'Update Image Version to: ${{ github.sha }}'
        - name: cat file 2
          run: cat deploy/deployment.yaml